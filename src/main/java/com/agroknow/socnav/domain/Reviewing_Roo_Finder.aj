// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agroknow.socnav.domain;

import com.agroknow.socnav.domain.Item;
import com.agroknow.socnav.domain.Reviewing;
import com.agroknow.socnav.domain.User;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Reviewing_Roo_Finder {
    
    public static TypedQuery<Reviewing> Reviewing.findReviewingsByItem(Item item) {
        if (item == null) throw new IllegalArgumentException("The item argument is required");
        EntityManager em = Reviewing.entityManager();
        TypedQuery<Reviewing> q = em.createQuery("SELECT o FROM Reviewing AS o WHERE o.item = :item", Reviewing.class);
        q.setParameter("item", item);
        return q;
    }
    
    public static TypedQuery<Reviewing> Reviewing.findReviewingsByUser(User user) {
        if (user == null) throw new IllegalArgumentException("The user argument is required");
        EntityManager em = Reviewing.entityManager();
        TypedQuery<Reviewing> q = em.createQuery("SELECT o FROM Reviewing AS o WHERE o.user = :user", Reviewing.class);
        q.setParameter("user", user);
        return q;
    }
    
    public static TypedQuery<Reviewing> Reviewing.findReviewingsByUserAndItem(User user, Item item) {
        if (user == null) throw new IllegalArgumentException("The user argument is required");
        if (item == null) throw new IllegalArgumentException("The item argument is required");
        EntityManager em = Reviewing.entityManager();
        TypedQuery<Reviewing> q = em.createQuery("SELECT o FROM Reviewing AS o WHERE o.user = :user AND o.item = :item", Reviewing.class);
        q.setParameter("user", user);
        q.setParameter("item", item);
        return q;
    }
    
}
