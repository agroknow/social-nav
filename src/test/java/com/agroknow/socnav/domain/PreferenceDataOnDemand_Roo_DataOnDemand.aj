// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agroknow.socnav.domain;

import com.agroknow.socnav.domain.Preference;
import com.agroknow.socnav.domain.PreferenceDataOnDemand;
import com.agroknow.socnav.domain.RatingDataOnDemand;
import com.agroknow.socnav.service.PreferenceService;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect PreferenceDataOnDemand_Roo_DataOnDemand {
    
    declare @type: PreferenceDataOnDemand: @Component;
    
    private Random PreferenceDataOnDemand.rnd = new SecureRandom();
    
    private List<Preference> PreferenceDataOnDemand.data;
    
    @Autowired
    RatingDataOnDemand PreferenceDataOnDemand.ratingDataOnDemand;
    
    @Autowired
    PreferenceService PreferenceDataOnDemand.preferenceService;
    
    public Preference PreferenceDataOnDemand.getNewTransientPreference(int index) {
        Preference obj = new Preference();
        setDimension(obj, index);
        setValue(obj, index);
        return obj;
    }
    
    public void PreferenceDataOnDemand.setDimension(Preference obj, int index) {
        int dimension = index;
        if (dimension < 1) {
            dimension = 1;
        }
        obj.setDimension(dimension);
    }
    
    public void PreferenceDataOnDemand.setValue(Preference obj, int index) {
        float value = new Integer(index).floatValue();
        obj.setValue(value);
    }
    
    public Preference PreferenceDataOnDemand.getSpecificPreference(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Preference obj = data.get(index);
        Long id = obj.getId();
        return preferenceService.findPreference(id);
    }
    
    public Preference PreferenceDataOnDemand.getRandomPreference() {
        init();
        Preference obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return preferenceService.findPreference(id);
    }
    
    public boolean PreferenceDataOnDemand.modifyPreference(Preference obj) {
        return false;
    }
    
    public void PreferenceDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = preferenceService.findPreferenceEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Preference' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Preference>();
        for (int i = 0; i < 10; i++) {
            Preference obj = getNewTransientPreference(i);
            try {
                preferenceService.savePreference(obj);
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
